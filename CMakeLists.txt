CMAKE_MINIMUM_REQUIRED( VERSION 2.8 ) 
PROJECT( hnode_acurite5n1_daemon ) 

SET( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/" )

SET( HNODE_ACCURITE5N1_SRC
     ${CMAKE_SOURCE_DIR}/src/hnode.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeWeatherMeasurement.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeWeatherEPPacket.cpp
     ${CMAKE_SOURCE_DIR}/src/Acurite5N1Manager.cpp
     ${CMAKE_SOURCE_DIR}/src/WeatherResource.cpp
)

SET( ACRT5N1D_SRC
     ${CMAKE_SOURCE_DIR}/src/acrt5n1d.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeWeatherMeasurement.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeWeatherEPPacket.cpp
     ${CMAKE_SOURCE_DIR}/src/Acurite5N1RTL433.cpp
)

SET( ACRT5N1D_CLIENT_SRC
     ${CMAKE_SOURCE_DIR}/src/acrt5n1d_client.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeWeatherMeasurement.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeWeatherEPPacket.cpp
)

SET(CMAKE_BUILD_TYPE Debug)

FIND_PACKAGE(GLIB REQUIRED)
FIND_PACKAGE(GOBJECT REQUIRED)
FIND_PACKAGE(AVAHI REQUIRED)
FIND_PACKAGE(HNREST REQUIRED)
FIND_PACKAGE(HNODE REQUIRED)
FIND_PACKAGE(LibXml2 REQUIRED)
FIND_PACKAGE(MICROHTTPD REQUIRED)
FIND_PACKAGE(Boost 1.49.0 COMPONENTS regex date_time program_options system thread REQUIRED) 
FIND_PACKAGE(LibRTLSDR)

MESSAGE( STATUS "Boost Inc: " ${Boost_INCLUDE_DIRS} )
MESSAGE( STATUS "Boost Lib: " ${Boost_LIBRARIES} )

INCLUDE_DIRECTORIES( ${GLIB_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${GOBJECT_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${AVAHI_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${HNREST_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${HNODE_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${MICROHTTPD_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${LIBXML2_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${LIBRTLSDR_INCLUDE_DIRS} )

INCLUDE_DIRECTORIES( ${CMAKE_SOURCE_DIR}/src )

ADD_EXECUTABLE( hnode_acurite5n1_daemon ${HNODE_ACCURITE5N1_SRC} ) 
TARGET_LINK_LIBRARIES( hnode_acurite5n1_daemon ${GLIB_LIBRARIES} )
#TARGET_LINK_LIBRARIES( hnode_acurite5n1_daemon ${GOBJECT_LIBRARIES} )
#TARGET_LINK_LIBRARIES( hnode_acurite5n1_daemon ${AVAHI_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_acurite5n1_daemon ${HNREST_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_acurite5n1_daemon ${HNODE_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_acurite5n1_daemon ${LIBXML2_LIBRARIES} )
#TARGET_LINK_LIBRARIES( hnode_acurite5n1_daemon ${MICROHTTPD_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_acurite5n1_daemon ${Boost_LIBRARIES} )

ADD_EXECUTABLE( acrt5n1d ${ACRT5N1D_SRC} ) 
TARGET_LINK_LIBRARIES( acrt5n1d "-ldaemon" )
TARGET_LINK_LIBRARIES( acrt5n1d ${LIBRTLSDR_LIBRARIES} )

ADD_EXECUTABLE( acrt5n1d_client ${ACRT5N1D_CLIENT_SRC} ) 


